import inspect

class Exploit(object):
	""" 
	Abstract Method Exploit: 
	To create a new exploit: 
		- Add a new class in a different file that inherits from this class

		- Look at class 'exploit_a'

	Note: Make sure the class has a unique name!
	"""
	###############################
	##IMPLEMENT BOTH METHODS BELOW 
	###########################
	def __init__(self):
		#Here define the port number of a service
		#it should be an integer
		self.port_number = 1834

		#Here define service name
		self.service_name = "service_name_example"

	def exploit(self, ip, port, flag_id):
		"""
		This method must be overwritten in subclasses.

		refer to exploit_a  or exploit_b for an example
		"""
		raise NotImplementedError('subclasses of Exploit must override exploit()!')


	##################################################
	######## No need read or implement Below this####
	##################################################
	def get_port(self):
		stack = inspect.stack()

		if self.port_number == None:
			raise Exception("Port Number Not defined! @file -- "+stack[1][1])
		elif type(self.port_number) != int :
			raise TypeError("Port Number must be type integer! @file --"+stack[1][1])
		else:
			return self.port_number

	def get_service(self):
		stack = inspect.stack()

		if self.service_name == None:
			raise Exception("Service Name Not defined! @file -- "+stack[1][1])
		elif type(self.service_name) != str :
			raise TypeError("Service Name must be of type string! @file -- "+stack[1][1])
		else:
			return self.service_name










